		hmmmm = ((hmmmm + 1) % 10);
		for (i = 0; i < (B_SIZE - 2); ++i) {
			buffer[i] = 'a' + hmmmm;
		}
		buffer[B_SIZE - 2] = '\n';
			buffer[B_SIZE - 1] = '\r';
		HAL_Delay(trans_delay);
		if (HAL_ADC_PollForConversion(&hadc2, 50) == HAL_OK) {
			a = HAL_ADC_GetValue(&hadc2);
			memset(ADC_buffer, 0, B_SIZE);
			sprintf(ADC_buffer, "|%u|\n\r", a);
		}
		HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
		HAL_Delay(trans_delay);

		HAL_UART_Receive_DMA(&huart1, RX_buffer, len);
		HAL_UART_Receive_DMA(&huart2, RX_buffer, len);
		HAL_Delay(trans_delay);

		HAL_UART_Transmit_DMA(&huart1, buffer, len);
		HAL_UART_Transmit_DMA(&huart2, buffer, len);
		HAL_Delay(trans_delay);

		HAL_UART_Transmit_DMA(&huart1, ADC_buffer, len);
		HAL_UART_Transmit_DMA(&huart2, ADC_buffer, len);
		HAL_Delay(trans_delay);

		HAL_UART_Transmit_DMA(&huart1, RX_buffer, len);
		HAL_UART_Transmit_DMA(&huart2, RX_buffer, len);
		HAL_Delay(trans_delay);





		if (HAL_ADC_Start(&hadc2) != HAL_OK) {
				Error_Handler();
}